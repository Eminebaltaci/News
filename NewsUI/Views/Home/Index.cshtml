@{
    ViewData["Title"] = "Home Page";
}

@model GetNewsResponseDto


@if (Model?.News?.Items == null || Model?.News?.Items?.Count == 0)
{
    <div>News not found</div>
}
else
{
    <div class="row mb-2">
        @foreach (var news in Model?.News?.Items)
        {
            <div class="col-md-12">
                <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
                    <div class="col p-4 d-flex flex-column position-static">
                        <strong class="d-inline-block mb-2 text-primary-emphasis">@news.Category.Title</strong>
                        <h3 class="mb-0">@news.Title</h3>
                        <div class="mb-1 text-body-secondary">@news.PublishDate</div>
                        <p class="card-text mb-auto">@(news.ShortText.Length > 132 ? news.ShortText.Substring(0, 132) + "..." : news.ShortText)</p>
                        <a target="_blank" href="~/Home/Details" class="icon-link gap-1 icon-link-hover stretched-link">
                            Continue reading
                            <svg class="bi"><use xlink:href="#chevron-right" /></svg>
                        </a>
                    </div>
                    <div class="col-auto d-none d-lg-block">
                        <img class="image" width="200" height="250" href="@news.ImageUrl" />
                    </div>
                </div>
            </div>
        }
        @await Html.PartialAsync("_NewsPagedList")

    </div>
}


